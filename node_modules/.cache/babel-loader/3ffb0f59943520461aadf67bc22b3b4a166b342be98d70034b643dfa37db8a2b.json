{"ast":null,"code":"var _jsxFileName = \"/Users/rahulchahal/react tutorial/my-react-app/src/components/DarkMode.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DarkMode() {\n  _s();\n  const getStyles = (color, backgroundColor) => {\n    return {\n      color,\n      backgroundColor\n    };\n  };\n  const [styles, setStyle] = useState(getStyles('black', 'white'));\n\n  // const [isStyle, setIsStyle] = useState(false);\n\n  const modeSwitch = () => {\n    // setIsStyle(!isStyle)\n    if (styles.color === 'black') {\n      setStyle(getStyles('white', 'black'));\n    } else {\n      setStyle(getStyles('black', 'white'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-check form-switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-check-input\",\n        type: \"checkbox\",\n        role: \"switch\",\n        id: \"flexSwitchCheckDefault\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-check-label\",\n        for: \"flexSwitchCheckDefault\",\n        children: \"Enable Dark mode.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(DarkMode, \"6C/S2yx8bgXBEeUkyE7URUxQAVg=\");\n_c = DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DarkMode","_s","getStyles","color","backgroundColor","styles","setStyle","useState","modeSwitch","children","class","type","role","id","fileName","_jsxFileName","lineNumber","columnNumber","for","_c","$RefreshReg$"],"sources":["/Users/rahulchahal/react tutorial/my-react-app/src/components/DarkMode.js"],"sourcesContent":["import React from 'react'\n\nexport default function DarkMode() {\n\n    const getStyles = (color, backgroundColor) =>\n    {  return {color,backgroundColor } };\n\n\nconst [styles, setStyle] = useState(getStyles('black','white'))\n\n// const [isStyle, setIsStyle] = useState(false);\n\nconst modeSwitch = () => {\n    // setIsStyle(!isStyle)\n    if (styles.color === 'black') {\n        setStyle(getStyles('white', 'black'))\n        \n        \n    } else {\n        setStyle(getStyles('black', 'white'));\n       \n    }\n};\n  return (\n    \n\n    <div>\n      <div class=\"form-check form-switch\">\n            <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n            <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable Dark mode.</label>\n        </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,eAAe,KACzC;IAAG,OAAO;MAACD,KAAK;MAACC;IAAgB,CAAC;EAAC,CAAC;EAGxC,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACL,SAAS,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;;EAE/D;;EAEA,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA,IAAIH,MAAM,CAACF,KAAK,KAAK,OAAO,EAAE;MAC1BG,QAAQ,CAACJ,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAGzC,CAAC,MAAM;MACHI,QAAQ,CAACJ,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAEzC;EACJ,CAAC;EACC,oBAGEH,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAKW,KAAK,EAAC,wBAAwB;MAAAD,QAAA,gBAC7BV,OAAA;QAAOW,KAAK,EAAC,kBAAkB;QAACC,IAAI,EAAC,UAAU;QAACC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3FlB,OAAA;QAAOW,KAAK,EAAC,kBAAkB;QAACQ,GAAG,EAAC,wBAAwB;QAAAT,QAAA,EAAC;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAChB,EAAA,CA/BuBD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}