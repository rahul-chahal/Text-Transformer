{"ast":null,"code":"var _jsxFileName = \"/Users/rahulchahal/react tutorial/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport Switchbutton from './components/Switchbutton';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setTo] = useState(\"light\");\n  const [alert, alertState] = useState(null);\n  const showAlert = mssg => {\n    alertState(mssg);\n    setTimeout(() => {\n      alertState(null);\n    }, 1000);\n  };\n  const modeSwitch = () => {\n    if (mode === 'light') {\n      setTo('dark');\n      showAlert(\"dark mode enabled\");\n      document.title = \"dark mode\";\n    } else if (mode === 'dark') {\n      setTo('light');\n      showAlert(\"light mode enabled\");\n      document.title = \"light mode\";\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      mode: mode,\n      modeSwitch: modeSwitch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AllMeetups, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }, this),\n        children: \"  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n// function Textform() {\n//     return <h2>Textform</h2>;\n//   }\n_s(App, \"FcTM+SBiQiQGcrOda82Ys4DLCHE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Switchbutton","Textform","About","Navbar","BrowserRouter","Router","Routes","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setTo","alert","alertState","showAlert","mssg","setTimeout","modeSwitch","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","AllMeetups","_c","$RefreshReg$"],"sources":["/Users/rahulchahal/react tutorial/my-react-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState } from 'react';\nimport Switchbutton from './components/Switchbutton';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setTo]=useState(\"light\")\n  const [alert, alertState] = useState(null)\n\n  const showAlert = (mssg) => {\n    alertState(mssg)\n    setTimeout(() => {\n      alertState(null)\n    }, 1000);\n  }\n\n  const modeSwitch=() => {\n    if (mode==='light'){\n      setTo('dark')\n      showAlert(\"dark mode enabled\")\n      document.title= \"dark mode\"\n      \n    }\n    else if (mode==='dark'){\n      setTo('light')\n      showAlert(\"light mode enabled\")\n      document.title= \"light mode\"\n    };\n}\n  return (\n    <>\n    <Navbar mode={mode} modeSwitch={modeSwitch}/>\n    {/* <Routes>\n          <Route path=\"/About\">\n            <About />\n          </Route>\n    </Routes> */}\n    {/* <Routes>\n      <Route path=\"/About\" element={<About />} />\n    </Routes>\n             */}\n\n    <Routes>\n      <Route path=\"/\" element={<AllMeetups />}>  </Route>\n    </Routes>\n        \n          \n\n    </>\n  )}\n// function Textform() {\n//     return <h2>Textform</h2>;\n//   }\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,KAAK,CAAC,GAACjB,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAM,CAACkB,KAAK,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMoB,SAAS,GAAIC,IAAI,IAAK;IAC1BF,UAAU,CAACE,IAAI,CAAC;IAChBC,UAAU,CAAC,MAAM;MACfH,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMI,UAAU,GAACA,CAAA,KAAM;IACrB,IAAIP,IAAI,KAAG,OAAO,EAAC;MACjBC,KAAK,CAAC,MAAM,CAAC;MACbG,SAAS,CAAC,mBAAmB,CAAC;MAC9BI,QAAQ,CAACC,KAAK,GAAE,WAAW;IAE7B,CAAC,MACI,IAAIT,IAAI,KAAG,MAAM,EAAC;MACrBC,KAAK,CAAC,OAAO,CAAC;MACdG,SAAS,CAAC,oBAAoB,CAAC;MAC/BI,QAAQ,CAACC,KAAK,GAAE,YAAY;IAC9B;IAAC;EACL,CAAC;EACC,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACAf,OAAA,CAACP,MAAM;MAACY,IAAI,EAAEA,IAAK;MAACO,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAW7CnB,OAAA,CAACJ,MAAM;MAAAmB,QAAA,eACLf,OAAA,CAACH,KAAK;QAACuB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAErB,OAAA,CAACsB,UAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAJ,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA,eAIP,CAAC;AACJ;AACH;AACA;AACA;AAAAf,EAAA,CA/CSD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}