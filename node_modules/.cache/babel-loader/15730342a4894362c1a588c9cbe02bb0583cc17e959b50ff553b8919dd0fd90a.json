{"ast":null,"code":"var _jsxFileName = \"/Users/rahulchahal/react tutorial/my-react-app/src/components/DarkMode.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DarkMode() {\n  _s();\n  const getStyles = (color, backgroundColor) => {\n    return {\n      color,\n      backgroundColor\n    };\n  };\n  const [styles, setStyle] = useState(getStyles('black', 'white'));\n  const modeSwitch = () => {\n    if (styles.color === 'black') {\n      setStyle(getStyles('white', 'black'));\n    } else {\n      setStyle(getStyles('black', 'white'));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-check form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-check-input\",\n          type: \"checkbox\",\n          role: \"switch\",\n          id: \"flexSwitchCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-check-label\",\n          for: \"flexSwitchCheckDefault\",\n          children: \"Enable Dark mode.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  };\n}\n_s(DarkMode, \"6C/S2yx8bgXBEeUkyE7URUxQAVg=\");\n_c = DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DarkMode","_s","getStyles","color","backgroundColor","styles","setStyle","useState","modeSwitch","children","class","type","role","id","fileName","_jsxFileName","lineNumber","columnNumber","for","_c","$RefreshReg$"],"sources":["/Users/rahulchahal/react tutorial/my-react-app/src/components/DarkMode.js"],"sourcesContent":["import React from 'react'\n\nexport default function DarkMode() \n    {\n    const getStyles = (color, backgroundColor) =>\n    {  return {color,backgroundColor } };\n\n\n    const [styles, setStyle] = useState(getStyles('black','white'))\n\n    const modeSwitch = () => {\n        if (styles.color === 'black') {\n            setStyle(getStyles('white', 'black'))\n            \n            \n        } \n        else {\n            setStyle(getStyles('black', 'white'));\n        }\n\n  return (\n    <div>\n      <div class=\"form-check form-switch\">\n            <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n            <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable Dark mode.</label>\n        </div>\n    </div>\n    )\n    }}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,QAAQA,CAAA,EAC5B;EAAAC,EAAA;EACA,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,eAAe,KACzC;IAAG,OAAO;MAACD,KAAK;MAACC;IAAgB,CAAC;EAAC,CAAC;EAGpC,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACL,SAAS,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;EAE/D,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIH,MAAM,CAACF,KAAK,KAAK,OAAO,EAAE;MAC1BG,QAAQ,CAACJ,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAGzC,CAAC,MACI;MACDI,QAAQ,CAACJ,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzC;IAEN,oBACEH,OAAA;MAAAU,QAAA,eACEV,OAAA;QAAKW,KAAK,EAAC,wBAAwB;QAAAD,QAAA,gBAC7BV,OAAA;UAAOW,KAAK,EAAC,kBAAkB;UAACC,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,QAAQ;UAACC,EAAE,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3FlB,OAAA;UAAOW,KAAK,EAAC,kBAAkB;UAACQ,GAAG,EAAC,wBAAwB;UAAAT,QAAA,EAAC;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEN,CAAC;AAAA;AAAChB,EAAA,CA1BkBD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}