{"ast":null,"code":"var _jsxFileName = \"/Users/rahulchahal/react tutorial/my-react-app/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport Switchbutton from './components/Switchbutton';\nimport Textform from './components/Textform';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //   const [mode, setTo]=useState(\"light\")\n  //   const [alert, alertState] = useState(null)\n\n  //   const showAlert = (mssg) => {\n  //     alertState(mssg)\n  //     setTimeout(() => {\n  //       alertState(null)\n  //     }, 1000);\n  //   }\n\n  //   const modeSwitch=() => {\n  //     if (mode==='light'){\n  //       setTo('dark')\n  //       showAlert(\"dark mode enabled\")\n  //       document.title= \"dark mode\"\n\n  //     }\n  //     else if (mode==='dark'){\n  //       setTo('light')\n  //       showAlert(\"light mode enabled\")\n  //       document.title= \"light mode\"\n  //     };\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/textform\",\n            children: /*#__PURE__*/_jsxDEV(Textform, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n// function Textform() {\n//     return <h2>Textform</h2>;\n//   }\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Switchbutton","Textform","Navbar","BrowserRouter","Router","Route","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahulchahal/react tutorial/my-react-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState } from 'react';\nimport Switchbutton from './components/Switchbutton';\nimport Textform from './components/Textform';\nimport Navbar from './components/Navbar';\n\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n//   const [mode, setTo]=useState(\"light\")\n//   const [alert, alertState] = useState(null)\n\n//   const showAlert = (mssg) => {\n//     alertState(mssg)\n//     setTimeout(() => {\n//       alertState(null)\n//     }, 1000);\n//   }\n\n//   const modeSwitch=() => {\n//     if (mode==='light'){\n//       setTo('dark')\n//       showAlert(\"dark mode enabled\")\n//       document.title= \"dark mode\"\n      \n//     }\n//     else if (mode==='dark'){\n//       setTo('light')\n//       showAlert(\"light mode enabled\")\n//       document.title= \"light mode\"\n//     };\n// }\n  return (\n    <>\n      <Router>\n      <div>\n\n\n        <Switch>\n          <Route path=\"/textform\">\n            {/* <Navbar mode={mode} modeSwitch={modeSwitch}/> */}\n            {/* <Switch mode={mode} modeSwitch={modeSwitch} alert={alert}/> */}\n            <Textform/>\n          </Route>\n\n        </Switch>\n\n\n      </div>\n      </Router>\n\n        \n          \n\n    </>\n  )}\n// function Textform() {\n//     return <h2>Textform</h2>;\n//   }\nexport default App;\n"],"mappings":";AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AAGxC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1E,SAASC,GAAGA,CAAA,EAAG;EACf;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA,CAACJ,MAAM;MAAAQ,QAAA,eACPJ,OAAA;QAAAI,QAAA,eAGEJ,OAAA,CAACF,MAAM;UAAAM,QAAA,eACLJ,OAAA,CAACH,KAAK;YAACQ,IAAI,EAAC,WAAW;YAAAD,QAAA,eAGrBJ,OAAA,CAACP,QAAQ;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBAKT,CAAC;AACJ;AACH;AACA;AACA;AAAAC,EAAA,GAlDSP,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}