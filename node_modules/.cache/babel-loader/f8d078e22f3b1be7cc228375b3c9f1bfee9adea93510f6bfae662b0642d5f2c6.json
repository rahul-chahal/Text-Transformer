{"ast":null,"code":"var _jsxFileName = \"/Users/rahulchahal/react tutorial/my-react-app/src/components/Textform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Textform() {\n  _s();\n  const [mytext, setText] = useState('');\n  const handleTextChange = event => {\n    setText(\"\");\n  };\n  const convertToUpperCase = () => {\n    let newtext = mytext.toUpperCase();\n    setText(newtext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlTextarea1\",\n          class: \"form-label\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enter you text below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          id: \"textArea\",\n          rows: \"9\",\n          value: mytext,\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          type: \"submit\",\n          onClick: convertToUpperCase,\n          children: \"Convert to uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Textform, \"j9mJqiLUzQ+RJSyYaDoA3A3+UnQ=\");\n_c = Textform;\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Textform","_s","mytext","setText","handleTextChange","event","convertToUpperCase","newtext","toUpperCase","children","className","class","fileName","_jsxFileName","lineNumber","columnNumber","for","id","rows","value","onChange","type","onClick","_c","$RefreshReg$"],"sources":["/Users/rahulchahal/react tutorial/my-react-app/src/components/Textform.js"],"sourcesContent":["import React, {useState}from 'react';\n\nexport default function Textform() {\n\n    const [mytext, setText] = useState('');\n\n    const handleTextChange = (event) => {\n        setText(\n            \"\"\n        );\n      };\n\n    const convertToUpperCase = () => {\n        let newtext= mytext.toUpperCase()\n        setText(newtext)\n        };\n\n  return (\n    <div>\n    <div className=\"container\">\n        <div class=\"mb-3\">\n        </div>\n        <div class=\"mb-3\">\n        \n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\"><h2>Enter you text below</h2></label>\n        <textarea class=\"form-control\" id=\"textArea\" rows=\"9\" value={mytext} onChange={handleTextChange}></textarea>\n        </div>\n        <div>\n            {/* <input class=\"btn btn-primary\" type=\"submit\" value=\"Convert to uppercase\"/>    */}\n            <button class=\"btn btn-primary\" type=\"submit\" onClick={convertToUpperCase}>Convert to uppercase</button>\n        </div>\n    </div>\n</div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,OAAO,CACH,EACJ,CAAC;EACH,CAAC;EAEH,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,OAAO,GAAEL,MAAM,CAACM,WAAW,CAAC,CAAC;IACjCL,OAAO,CAACI,OAAO,CAAC;EAChB,CAAC;EAEP,oBACER,OAAA;IAAAU,QAAA,eACAV,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBV,OAAA;QAAKY,KAAK,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNhB,OAAA;QAAKY,KAAK,EAAC,MAAM;QAAAF,QAAA,gBAEjBV,OAAA;UAAOiB,GAAG,EAAC,6BAA6B;UAACL,KAAK,EAAC,YAAY;UAAAF,QAAA,eAACV,OAAA;YAAAU,QAAA,EAAI;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjGhB,OAAA;UAAUY,KAAK,EAAC,cAAc;UAACM,EAAE,EAAC,UAAU;UAACC,IAAI,EAAC,GAAG;UAACC,KAAK,EAAEjB,MAAO;UAACkB,QAAQ,EAAEhB;QAAiB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvG,CAAC,eACNhB,OAAA;QAAAU,QAAA,eAEIV,OAAA;UAAQY,KAAK,EAAC,iBAAiB;UAACU,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAEhB,kBAAmB;UAAAG,QAAA,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEN;AAACd,EAAA,CAhCuBD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}