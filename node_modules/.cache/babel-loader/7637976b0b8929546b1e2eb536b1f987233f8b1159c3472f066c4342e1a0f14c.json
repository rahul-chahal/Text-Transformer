{"ast":null,"code":"var _jsxFileName = \"/Users/rahulchahal/react tutorial/my-react-app/src/components/Textform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Textform() {\n  _s();\n  const [mytext, setText] = useState('');\n  const handleTextChange = event => {\n    setText(event.target.value);\n  };\n  const convertToUpperCase = () => {\n    let newtext = mytext.toUpperCase();\n    setText(newtext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlTextarea1\",\n          class: \"form-label\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enter you text below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          id: \"textArea\",\n          rows: \"9\",\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          type: \"submit\",\n          onClick: convertToUpperCase,\n          children: \"Convert to uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your text summary: \", mytext.split(\" \").length, \" words and \", mytext.length, \" characters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Prev\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mytext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Textform, \"j9mJqiLUzQ+RJSyYaDoA3A3+UnQ=\");\n_c = Textform;\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Textform","_s","mytext","setText","handleTextChange","event","target","value","convertToUpperCase","newtext","toUpperCase","children","className","class","fileName","_jsxFileName","lineNumber","columnNumber","for","id","rows","onChange","type","onClick","split","length","_c","$RefreshReg$"],"sources":["/Users/rahulchahal/react tutorial/my-react-app/src/components/Textform.js"],"sourcesContent":["import React, {useState}from 'react';\n\nexport default function Textform() {\n\n    const [mytext, setText] = useState('');\n    \n   \n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n      };\n    \n    const convertToUpperCase = () => {\n        let newtext= mytext.toUpperCase()\n        setText(newtext)\n    \n\n        };\n   \n  return (\n    <div>\n    <div className=\"container\">\n        <div class=\"mb-3\">\n        </div>\n        <div class=\"mb-3\">\n        \n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\"><h2>Enter you text below</h2></label>\n        \n        {/* <textarea class=\"form-control\" id=\"textArea\" rows=\"9\" onChange={handleTextChange} value={mytext}></textarea> */}\n        <textarea class=\"form-control\" id=\"textArea\" rows=\"9\" onChange={handleTextChange}></textarea>\n        </div>\n        <div>\n            <button class=\"btn btn-primary\" type=\"submit\" onClick={convertToUpperCase}>Convert to uppercase</button>\n        </div>\n\n    \n        <div><p>Your text summary: {mytext.split(\" \").length} words and {mytext.length} characters</p>\n        <h2>\n        Prev\n        <p>{mytext}</p>\n        </h2>\n        </div>\n    </div>\n</div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAItC,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAEH,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,OAAO,GAAEP,MAAM,CAACQ,WAAW,CAAC,CAAC;IACjCP,OAAO,CAACM,OAAO,CAAC;EAGhB,CAAC;EAEP,oBACEV,OAAA;IAAAY,QAAA,eACAZ,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBZ,OAAA;QAAKc,KAAK,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNlB,OAAA;QAAKc,KAAK,EAAC,MAAM;QAAAF,QAAA,gBAEjBZ,OAAA;UAAOmB,GAAG,EAAC,6BAA6B;UAACL,KAAK,EAAC,YAAY;UAAAF,QAAA,eAACZ,OAAA;YAAAY,QAAA,EAAI;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAGjGlB,OAAA;UAAUc,KAAK,EAAC,cAAc;UAACM,EAAE,EAAC,UAAU;UAACC,IAAI,EAAC,GAAG;UAACC,QAAQ,EAAEjB;QAAiB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxF,CAAC,eACNlB,OAAA;QAAAY,QAAA,eACIZ,OAAA;UAAQc,KAAK,EAAC,iBAAiB;UAACS,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAEf,kBAAmB;UAAAG,QAAA,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvG,CAAC,eAGNlB,OAAA;QAAAY,QAAA,gBAAKZ,OAAA;UAAAY,QAAA,GAAG,qBAAmB,EAACT,MAAM,CAACsB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,aAAW,EAACvB,MAAM,CAACuB,MAAM,EAAC,aAAW;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9FlB,OAAA;UAAAY,QAAA,GAAI,MAEJ,eAAAZ,OAAA;YAAAY,QAAA,EAAIT;UAAM;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEN;AAAChB,EAAA,CA3CuBD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}